// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: dictionary_manage_grpc_service.proto

package archradar_grpc

import (
	context "context"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DictionaryType int32

const (
	DictionaryType_AREA      DictionaryType = 0
	DictionaryType_TEAM      DictionaryType = 1
	DictionaryType_CODE_LANG DictionaryType = 2
)

// Enum value maps for DictionaryType.
var (
	DictionaryType_name = map[int32]string{
		0: "AREA",
		1: "TEAM",
		2: "CODE_LANG",
	}
	DictionaryType_value = map[string]int32{
		"AREA":      0,
		"TEAM":      1,
		"CODE_LANG": 2,
	}
)

func (x DictionaryType) Enum() *DictionaryType {
	p := new(DictionaryType)
	*p = x
	return p
}

func (x DictionaryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DictionaryType) Descriptor() protoreflect.EnumDescriptor {
	return file_dictionary_manage_grpc_service_proto_enumTypes[0].Descriptor()
}

func (DictionaryType) Type() protoreflect.EnumType {
	return &file_dictionary_manage_grpc_service_proto_enumTypes[0]
}

func (x DictionaryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DictionaryType.Descriptor instead.
func (DictionaryType) EnumDescriptor() ([]byte, []int) {
	return file_dictionary_manage_grpc_service_proto_rawDescGZIP(), []int{0}
}

type DictionaryCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictionaryUuid string         `protobuf:"bytes,1,opt,name=dictionary_uuid,json=dictionaryUuid,proto3" json:"dictionary_uuid,omitempty"`
	DictType       DictionaryType `protobuf:"varint,2,opt,name=dict_type,json=dictType,proto3,enum=DictionaryType" json:"dict_type,omitempty"`
	Title          string         `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Color          string         `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Description    string         `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DictionaryCreateRequest) Reset() {
	*x = DictionaryCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_manage_grpc_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryCreateRequest) ProtoMessage() {}

func (x *DictionaryCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_manage_grpc_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryCreateRequest.ProtoReflect.Descriptor instead.
func (*DictionaryCreateRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_manage_grpc_service_proto_rawDescGZIP(), []int{0}
}

func (x *DictionaryCreateRequest) GetDictionaryUuid() string {
	if x != nil {
		return x.DictionaryUuid
	}
	return ""
}

func (x *DictionaryCreateRequest) GetDictType() DictionaryType {
	if x != nil {
		return x.DictType
	}
	return DictionaryType_AREA
}

func (x *DictionaryCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DictionaryCreateRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *DictionaryCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DictionaryUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictionaryUuid string         `protobuf:"bytes,1,opt,name=dictionary_uuid,json=dictionaryUuid,proto3" json:"dictionary_uuid,omitempty"`
	DictType       DictionaryType `protobuf:"varint,2,opt,name=dict_type,json=dictType,proto3,enum=DictionaryType" json:"dict_type,omitempty"`
	Title          string         `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Color          string         `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Description    string         `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DictionaryUpdateRequest) Reset() {
	*x = DictionaryUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_manage_grpc_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryUpdateRequest) ProtoMessage() {}

func (x *DictionaryUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_manage_grpc_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryUpdateRequest.ProtoReflect.Descriptor instead.
func (*DictionaryUpdateRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_manage_grpc_service_proto_rawDescGZIP(), []int{1}
}

func (x *DictionaryUpdateRequest) GetDictionaryUuid() string {
	if x != nil {
		return x.DictionaryUuid
	}
	return ""
}

func (x *DictionaryUpdateRequest) GetDictType() DictionaryType {
	if x != nil {
		return x.DictType
	}
	return DictionaryType_AREA
}

func (x *DictionaryUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DictionaryUpdateRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *DictionaryUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DictionaryDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictionaryUuid string `protobuf:"bytes,1,opt,name=dictionary_uuid,json=dictionaryUuid,proto3" json:"dictionary_uuid,omitempty"`
}

func (x *DictionaryDeleteRequest) Reset() {
	*x = DictionaryDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_manage_grpc_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryDeleteRequest) ProtoMessage() {}

func (x *DictionaryDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_manage_grpc_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryDeleteRequest.ProtoReflect.Descriptor instead.
func (*DictionaryDeleteRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_manage_grpc_service_proto_rawDescGZIP(), []int{2}
}

func (x *DictionaryDeleteRequest) GetDictionaryUuid() string {
	if x != nil {
		return x.DictionaryUuid
	}
	return ""
}

type DictionaryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictType DictionaryType `protobuf:"varint,1,opt,name=dict_type,json=dictType,proto3,enum=DictionaryType" json:"dict_type,omitempty"`
}

func (x *DictionaryListRequest) Reset() {
	*x = DictionaryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_manage_grpc_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryListRequest) ProtoMessage() {}

func (x *DictionaryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_manage_grpc_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryListRequest.ProtoReflect.Descriptor instead.
func (*DictionaryListRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_manage_grpc_service_proto_rawDescGZIP(), []int{3}
}

func (x *DictionaryListRequest) GetDictType() DictionaryType {
	if x != nil {
		return x.DictType
	}
	return DictionaryType_AREA
}

type DictionaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictionaryUuid string         `protobuf:"bytes,1,opt,name=dictionary_uuid,json=dictionaryUuid,proto3" json:"dictionary_uuid,omitempty"`
	DictType       DictionaryType `protobuf:"varint,2,opt,name=dict_type,json=dictType,proto3,enum=DictionaryType" json:"dict_type,omitempty"`
	Title          string         `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Color          string         `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Description    string         `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DictionaryResponse) Reset() {
	*x = DictionaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_manage_grpc_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryResponse) ProtoMessage() {}

func (x *DictionaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_manage_grpc_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryResponse.ProtoReflect.Descriptor instead.
func (*DictionaryResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_manage_grpc_service_proto_rawDescGZIP(), []int{4}
}

func (x *DictionaryResponse) GetDictionaryUuid() string {
	if x != nil {
		return x.DictionaryUuid
	}
	return ""
}

func (x *DictionaryResponse) GetDictType() DictionaryType {
	if x != nil {
		return x.DictType
	}
	return DictionaryType_AREA
}

func (x *DictionaryResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DictionaryResponse) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *DictionaryResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DictionaryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*DictionaryResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	PageInfo *PageInfoItem         `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
}

func (x *DictionaryListResponse) Reset() {
	*x = DictionaryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionary_manage_grpc_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryListResponse) ProtoMessage() {}

func (x *DictionaryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_manage_grpc_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryListResponse.ProtoReflect.Descriptor instead.
func (*DictionaryListResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_manage_grpc_service_proto_rawDescGZIP(), []int{5}
}

func (x *DictionaryListResponse) GetItems() []*DictionaryResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DictionaryListResponse) GetPageInfo() *PageInfoItem {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

var File_dictionary_manage_grpc_service_proto protoreflect.FileDescriptor

var file_dictionary_manage_grpc_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x01, 0x0a, 0x17, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x0f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x04, 0x18, 0x80, 0x01, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x07, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc8, 0x01, 0x0a, 0x17, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x17, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x0f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x55, 0x75, 0x69, 0x64,
	0x22, 0x45, 0x0a, 0x15, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x12, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x0f, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7b, 0x0a,
	0x16, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0x33, 0x0a, 0x0e, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x41, 0x52, 0x45, 0x41, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x41, 0x4e, 0x47, 0x10, 0x02, 0x32,
	0xc3, 0x02, 0x0a, 0x1b, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x46, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x18, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x66, 0x73, 0x73, 0x6f, 0x62, 0x73, 0x64, 0x2f, 0x61, 0x72,
	0x63, 0x68, 0x2d, 0x72, 0x61, 0x64, 0x61, 0x72, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x72, 0x61, 0x64,
	0x61, 0x72, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dictionary_manage_grpc_service_proto_rawDescOnce sync.Once
	file_dictionary_manage_grpc_service_proto_rawDescData = file_dictionary_manage_grpc_service_proto_rawDesc
)

func file_dictionary_manage_grpc_service_proto_rawDescGZIP() []byte {
	file_dictionary_manage_grpc_service_proto_rawDescOnce.Do(func() {
		file_dictionary_manage_grpc_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_dictionary_manage_grpc_service_proto_rawDescData)
	})
	return file_dictionary_manage_grpc_service_proto_rawDescData
}

var file_dictionary_manage_grpc_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dictionary_manage_grpc_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dictionary_manage_grpc_service_proto_goTypes = []interface{}{
	(DictionaryType)(0),             // 0: DictionaryType
	(*DictionaryCreateRequest)(nil), // 1: DictionaryCreateRequest
	(*DictionaryUpdateRequest)(nil), // 2: DictionaryUpdateRequest
	(*DictionaryDeleteRequest)(nil), // 3: DictionaryDeleteRequest
	(*DictionaryListRequest)(nil),   // 4: DictionaryListRequest
	(*DictionaryResponse)(nil),      // 5: DictionaryResponse
	(*DictionaryListResponse)(nil),  // 6: DictionaryListResponse
	(*PageInfoItem)(nil),            // 7: CommonTypes.PageInfoItem
	(*empty.Empty)(nil),             // 8: google.protobuf.Empty
}
var file_dictionary_manage_grpc_service_proto_depIdxs = []int32{
	0,  // 0: DictionaryCreateRequest.dict_type:type_name -> DictionaryType
	0,  // 1: DictionaryUpdateRequest.dict_type:type_name -> DictionaryType
	0,  // 2: DictionaryListRequest.dict_type:type_name -> DictionaryType
	0,  // 3: DictionaryResponse.dict_type:type_name -> DictionaryType
	5,  // 4: DictionaryListResponse.items:type_name -> DictionaryResponse
	7,  // 5: DictionaryListResponse.page_info:type_name -> CommonTypes.PageInfoItem
	4,  // 6: DictionaryManageGrpcService.GetDictionaryList:input_type -> DictionaryListRequest
	1,  // 7: DictionaryManageGrpcService.CreateDictionaryItem:input_type -> DictionaryCreateRequest
	3,  // 8: DictionaryManageGrpcService.DeleteDictionaryItem:input_type -> DictionaryDeleteRequest
	2,  // 9: DictionaryManageGrpcService.UpdateDictionaryItem:input_type -> DictionaryUpdateRequest
	6,  // 10: DictionaryManageGrpcService.GetDictionaryList:output_type -> DictionaryListResponse
	5,  // 11: DictionaryManageGrpcService.CreateDictionaryItem:output_type -> DictionaryResponse
	8,  // 12: DictionaryManageGrpcService.DeleteDictionaryItem:output_type -> google.protobuf.Empty
	5,  // 13: DictionaryManageGrpcService.UpdateDictionaryItem:output_type -> DictionaryResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_dictionary_manage_grpc_service_proto_init() }
func file_dictionary_manage_grpc_service_proto_init() {
	if File_dictionary_manage_grpc_service_proto != nil {
		return
	}
	file_common_types_proto_init()
	file_optional_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dictionary_manage_grpc_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_manage_grpc_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_manage_grpc_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_manage_grpc_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_manage_grpc_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionary_manage_grpc_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dictionary_manage_grpc_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dictionary_manage_grpc_service_proto_goTypes,
		DependencyIndexes: file_dictionary_manage_grpc_service_proto_depIdxs,
		EnumInfos:         file_dictionary_manage_grpc_service_proto_enumTypes,
		MessageInfos:      file_dictionary_manage_grpc_service_proto_msgTypes,
	}.Build()
	File_dictionary_manage_grpc_service_proto = out.File
	file_dictionary_manage_grpc_service_proto_rawDesc = nil
	file_dictionary_manage_grpc_service_proto_goTypes = nil
	file_dictionary_manage_grpc_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DictionaryManageGrpcServiceClient is the client API for DictionaryManageGrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DictionaryManageGrpcServiceClient interface {
	GetDictionaryList(ctx context.Context, in *DictionaryListRequest, opts ...grpc.CallOption) (*DictionaryListResponse, error)
	CreateDictionaryItem(ctx context.Context, in *DictionaryCreateRequest, opts ...grpc.CallOption) (*DictionaryResponse, error)
	DeleteDictionaryItem(ctx context.Context, in *DictionaryDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateDictionaryItem(ctx context.Context, in *DictionaryUpdateRequest, opts ...grpc.CallOption) (*DictionaryResponse, error)
}

type dictionaryManageGrpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDictionaryManageGrpcServiceClient(cc grpc.ClientConnInterface) DictionaryManageGrpcServiceClient {
	return &dictionaryManageGrpcServiceClient{cc}
}

func (c *dictionaryManageGrpcServiceClient) GetDictionaryList(ctx context.Context, in *DictionaryListRequest, opts ...grpc.CallOption) (*DictionaryListResponse, error) {
	out := new(DictionaryListResponse)
	err := c.cc.Invoke(ctx, "/DictionaryManageGrpcService/GetDictionaryList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dictionaryManageGrpcServiceClient) CreateDictionaryItem(ctx context.Context, in *DictionaryCreateRequest, opts ...grpc.CallOption) (*DictionaryResponse, error) {
	out := new(DictionaryResponse)
	err := c.cc.Invoke(ctx, "/DictionaryManageGrpcService/CreateDictionaryItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dictionaryManageGrpcServiceClient) DeleteDictionaryItem(ctx context.Context, in *DictionaryDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/DictionaryManageGrpcService/DeleteDictionaryItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dictionaryManageGrpcServiceClient) UpdateDictionaryItem(ctx context.Context, in *DictionaryUpdateRequest, opts ...grpc.CallOption) (*DictionaryResponse, error) {
	out := new(DictionaryResponse)
	err := c.cc.Invoke(ctx, "/DictionaryManageGrpcService/UpdateDictionaryItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DictionaryManageGrpcServiceServer is the server API for DictionaryManageGrpcService service.
type DictionaryManageGrpcServiceServer interface {
	GetDictionaryList(context.Context, *DictionaryListRequest) (*DictionaryListResponse, error)
	CreateDictionaryItem(context.Context, *DictionaryCreateRequest) (*DictionaryResponse, error)
	DeleteDictionaryItem(context.Context, *DictionaryDeleteRequest) (*empty.Empty, error)
	UpdateDictionaryItem(context.Context, *DictionaryUpdateRequest) (*DictionaryResponse, error)
}

// UnimplementedDictionaryManageGrpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDictionaryManageGrpcServiceServer struct {
}

func (*UnimplementedDictionaryManageGrpcServiceServer) GetDictionaryList(context.Context, *DictionaryListRequest) (*DictionaryListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDictionaryList not implemented")
}
func (*UnimplementedDictionaryManageGrpcServiceServer) CreateDictionaryItem(context.Context, *DictionaryCreateRequest) (*DictionaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDictionaryItem not implemented")
}
func (*UnimplementedDictionaryManageGrpcServiceServer) DeleteDictionaryItem(context.Context, *DictionaryDeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDictionaryItem not implemented")
}
func (*UnimplementedDictionaryManageGrpcServiceServer) UpdateDictionaryItem(context.Context, *DictionaryUpdateRequest) (*DictionaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDictionaryItem not implemented")
}

func RegisterDictionaryManageGrpcServiceServer(s *grpc.Server, srv DictionaryManageGrpcServiceServer) {
	s.RegisterService(&_DictionaryManageGrpcService_serviceDesc, srv)
}

func _DictionaryManageGrpcService_GetDictionaryList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DictionaryListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DictionaryManageGrpcServiceServer).GetDictionaryList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DictionaryManageGrpcService/GetDictionaryList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DictionaryManageGrpcServiceServer).GetDictionaryList(ctx, req.(*DictionaryListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DictionaryManageGrpcService_CreateDictionaryItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DictionaryCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DictionaryManageGrpcServiceServer).CreateDictionaryItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DictionaryManageGrpcService/CreateDictionaryItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DictionaryManageGrpcServiceServer).CreateDictionaryItem(ctx, req.(*DictionaryCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DictionaryManageGrpcService_DeleteDictionaryItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DictionaryDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DictionaryManageGrpcServiceServer).DeleteDictionaryItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DictionaryManageGrpcService/DeleteDictionaryItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DictionaryManageGrpcServiceServer).DeleteDictionaryItem(ctx, req.(*DictionaryDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DictionaryManageGrpcService_UpdateDictionaryItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DictionaryUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DictionaryManageGrpcServiceServer).UpdateDictionaryItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DictionaryManageGrpcService/UpdateDictionaryItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DictionaryManageGrpcServiceServer).UpdateDictionaryItem(ctx, req.(*DictionaryUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DictionaryManageGrpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DictionaryManageGrpcService",
	HandlerType: (*DictionaryManageGrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDictionaryList",
			Handler:    _DictionaryManageGrpcService_GetDictionaryList_Handler,
		},
		{
			MethodName: "CreateDictionaryItem",
			Handler:    _DictionaryManageGrpcService_CreateDictionaryItem_Handler,
		},
		{
			MethodName: "DeleteDictionaryItem",
			Handler:    _DictionaryManageGrpcService_DeleteDictionaryItem_Handler,
		},
		{
			MethodName: "UpdateDictionaryItem",
			Handler:    _DictionaryManageGrpcService_UpdateDictionaryItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dictionary_manage_grpc_service.proto",
}
